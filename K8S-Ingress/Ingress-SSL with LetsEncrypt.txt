Ingress - SSL with LetsEncrypt {Azure AKS, Nginx Ingress, External DNS, SSL with Let's Encrpt}  - 

TLS: Trasport Layer Security work on top of TCP protocal

	Encryption protocal for secure data trasmission (formerly SSL - secure sockets layer), Based on cirtificate based encryption.
	Mainly used for https
	Various other encrypted protocals are also based on TLS 
	TLS is most secured protocal version of SSL.
	TLS is an encryption and authentication protocal designed to secure internet communications.

Hosting: web hosting is an online service that allows you to publish our website files onto the internet.
		 so anyone who has access to the internet has access to our website
	
	Types of Hosting:
		
			1. Shared Hosting
			2. VPS
			3. Dedicated Hosting
			4. Cloud Hosting

Web Security: which come under network security, Provides the security for data which is trasmitted through network.

	HTTP vs HTTPS:

		1. User ------> Normal HTTP (Insecured connection)
		2. User ------> Secure HTTPS (Encrypted connection - SSL Cirtificate)

	Connection: Transport to provide the service.
	Session: Association b/w client & server.

	SSL Introduction: 1. Secure Socket layer and, in short, its the standard technology for keeping an internet connection secure ad safeguarding any sensitive
			     data that is being sent between two systems, preventing criminals from reading and modifying any information trasferred, including
			     potential personal details.
			  2. Provides sucure Data transfer b/w webbrowser & server.
			  3. SSL protocal stack:
					1. SSL Record protocal
					2. Handshake Protocal
					3. Change Cipher Spec Protocal
					4. Alert Protocal

		Ingress SSL: Automatically generate and renew ssl cirtificates.

	Kubernetes Cert Manager:

		1. Cert-manager is a native kubernetes certificate management controller.
		2. It can help with issuing certificates from various sources, such as Let's Encrypt, HashiCorp Vault, Venafi
		   a simple signing key pair, or self signed.
		3. It will ensure cirtificates are valid end up to date, and attempt to renew certificates at a configured time
		   before expiry.

	Ingress-SSL Manifest:

	apiVersion: networking.k8s.io/v1
	kind: Ingress
	metadata:
	  name: ingress-ssl
	  annotations:
	    kubernetes.io/ingress.class: "nginx"
	    cert-manager.io/cluster-issuer: letsencrypt
	spec:
	  rules:
	    - host: sapp1.kubeoncloud.com
	      http:
		paths:
		  - path: /
		    pathType: Prefix
		    backend:
		      service:
			name: app1-nginx-clusterip-service
			port:
			  number: 80
	     - host: sapp2.kubeoncloud.com
	      http:
		paths:
		  - path: /
		    pathType: Prefix
		    backend:
		      service:
			name: app2-nginx-clusterip-service
			port:
			  number: 80
	tls:
	- hosts: 
	  - sapp1.kubeoncloud.com
	  secretName: sapp1-kubeoncloud-secret
	- hosts:
	  - sapp2.kubeoncloud.com
	  secretName: sapp2.kubeoncloud-secret